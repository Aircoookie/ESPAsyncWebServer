#include "SPIFFSEditor.h"
#include <FS.h>

// File: edit.htm.gz, Size: 5284
#define edit_htm_gz_len 5284
const uint8_t edit_htm_gz[] PROGMEM = {
    0x1F, 0x8B, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC5, 0x1C, 0x69, 0x77, 0xD3, 0x48,
    0xF2, 0xFB, 0xBC, 0x37, 0xFF, 0xA1, 0x11, 0x3B, 0x58, 0x1E, 0x9F, 0x39, 0xC8, 0x80, 0x13, 0xC3,
    0xDA, 0x4E, 0x42, 0x42, 0x4E, 0x62, 0x1B, 0x08, 0x2C, 0x3B, 0x4F, 0x96, 0xDA, 0xB6, 0x88, 0x2C,
    0x09, 0x49, 0x8E, 0x6D, 0xD8, 0xFC, 0xF7, 0xAD, 0xEA, 0x43, 0x6A, 0xC9, 0xB2, 0x49, 0x60, 0xE6,
    0x0D, 0x04, 0x6C, 0x75, 0x57, 0x55, 0x57, 0xD7, 0xDD, 0x87, 0xB2, 0xF7, 0xA8, 0x52, 0xE9, 0x8D,
    0xED, 0x90, 0xC0, 0x4F, 0x34, 0xA6, 0xC4, 0x77, 0x0C, 0xDB, 0x25, 0xE3, 0x68, 0xE2, 0x90, 0xD0,
    0x9B, 0x06, 0x26, 0x25, 0xDE, 0x90, 0x75, 0x8C, 0xE9, 0x9C, 0x50, 0xD7, 0xF4, 0x2C, 0x6A, 0x91,
    0x03, 0xCB, 0x8E, 0xBC, 0xA0, 0x72, 0x69, 0x8C, 0x28, 0xA1, 0x93, 0x01, 0xB5, 0xB0, 0x11, 0xD0,
    0xBA, 0x97, 0xC7, 0x87, 0x87, 0x5D, 0xDE, 0x5B, 0x35, 0x7D, 0x9F, 0x54, 0x2A, 0x2F, 0x7E, 0xFD,
    0x65, 0xEF, 0xD1, 0xFE, 0x45, 0xA7, 0x77, 0x7D, 0x79, 0xC0, 0xC8, 0x62, 0x03, 0x23, 0xEF, 0x18,
    0xEE, 0xA8, 0xA9, 0x51, 0x57, 0x63, 0x2D, 0xD4, 0xB0, 0xF0, 0x33, 0xB2, 0x23, 0x87, 0xBE, 0x38,
    0xE8, 0x5E, 0x8A, 0x31, 0xF6, 0x6A, 0xBC, 0x05, 0xBA, 0xC2, 0x68, 0xE1, 0x50, 0x12, 0x2D, 0x7C,
    0xDA, 0xD4, 0x22, 0x3A, 0x8F, 0x6A, 0x66, 0x18, 0x6A, 0x64, 0x42, 0x2D, 0xDB, 0x68, 0x6A, 0xA1,
    0x19, 0x50, 0x4E, 0xAA, 0x6A, 0x4E, 0xC8, 0xB7, 0x5F, 0x7F, 0x21, 0xE4, 0x6B, 0xC5, 0x76, 0x2D,
    0x3A, 0x6F, 0x90, 0xAD, 0x7A, 0x7D, 0x17, 0x1B, 0x7C, 0x2F, 0xB4, 0x23, 0xDB, 0x73, 0x1B, 0xC4,
    0x18, 0x84, 0x9E, 0x33, 0x8D, 0x28, 0x6B, 0x76, 0xE8, 0x30, 0x6A, 0x90, 0xA7, 0xFE, 0x9C, 0x3D,
    0x0D, 0xBC, 0xC0, 0xA2, 0x41, 0x83, 0x6C, 0xF8, 0x73, 0x10, 0x80, 0x63, 0x5B, 0xE4, 0xF1, 0xF6,
    0xF6, 0x36, 0xEF, 0x32, 0xCC, 0x9B, 0x51, 0xE0, 0x4D, 0x5D, 0xAB, 0x62, 0x7A, 0x8E, 0x07, 0x40,
    0x8F, 0x0F, 0x9F, 0xE2, 0x5F, 0xD6, 0x6B, 0xD9, 0x21, 0xC8, 0x6E, 0xD1, 0x20, 0xAE, 0xE7, 0x52,
    0x41, 0x6A, 0x5E, 0x09, 0xC7, 0x86, 0xE5, 0xCD, 0x1A, 0xA4, 0x0E, 0x7F, 0x37, 0xEA, 0x40, 0x33,
    0x18, 0x0D, 0x0C, 0x9D, 0xD4, 0xCB, 0xE2, 0xA7, 0xBA, 0x4D, 0x8A, 0x0C, 0x78, 0xE8, 0xB9, 0x51,
    0x25, 0xB4, 0xBF, 0x52, 0x18, 0x7A, 0x53, 0xF0, 0xC2, 0xDA, 0x86, 0xC6, 0xC4, 0x76, 0x80, 0x6C,
    0x68, 0xB8, 0x61, 0x25, 0xA4, 0x81, 0x3D, 0x4C, 0xFA, 0x66, 0xD4, 0x1E, 0x8D, 0xA3, 0xC6, 0xC0,
    0x73, 0x2C, 0x68, 0xBC, 0xE3, 0x93, 0x9F, 0x3A, 0x7C, 0xFE, 0x8E, 0x1D, 0x02, 0x45, 0x14, 0x9A,
    0xC2, 0x53, 0xE4, 0xF9, 0xC0, 0x8C, 0x32, 0x6F, 0xFE, 0x7D, 0x62, 0x04, 0x23, 0xDB, 0x95, 0x4F,
    0xBE, 0x61, 0x59, 0xB6, 0x3B, 0xE2, 0x8F, 0x82, 0xAA, 0x63, 0x73, 0xAA, 0x89, 0x10, 0x03, 0xEA,
    0x18, 0x91, 0x7D, 0xCB, 0xE9, 0x4E, 0x6C, 0xB7, 0x32, 0xB3, 0xAD, 0x68, 0xDC, 0x20, 0x3B, 0x75,
    0xC1, 0xBE, 0x39, 0x0D, 0x42, 0x94, 0x92, 0xEF, 0xD9, 0x6E, 0x44, 0x83, 0x84, 0x56, 0xE8, 0x1B,
    0x2E, 0xA7, 0x26, 0xE5, 0x28, 0x45, 0x1C, 0x0B, 0xD1, 0x76, 0x1D, 0xDB, 0xA5, 0x95, 0x81, 0xE3,
    0x99, 0x37, 0x69, 0x9E, 0x76, 0x18, 0xF5, 0x98, 0xAB, 0xC6, 0xD8, 0xBB, 0xA5, 0x01, 0xF9, 0xA6,
    0x68, 0x47, 0xD0, 0x23, 0x59, 0x18, 0x3E, 0x6C, 0x3C, 0xE6, 0xC1, 0xC1, 0x01, 0x87, 0x89, 0x6E,
    0xA7, 0x20, 0x34, 0xD0, 0x05, 0x7E, 0x89, 0xE7, 0xA9, 0xCA, 0x20, 0x2B, 0xA0, 0x1C, 0xD1, 0x4A,
    0x42, 0xB6, 0xEB, 0x4F, 0xA3, 0xAC, 0xA8, 0x52, 0xF6, 0xE6, 0xF9, 0x86, 0x69, 0x47, 0x8B, 0x44,
    0xBA, 0x88, 0xF6, 0x4D, 0xEA, 0x14, 0x09, 0x06, 0x13, 0xC3, 0x61, 0x56, 0x40, 0xDE, 0xD2, 0xC0,
    0x32, 0x5C, 0xA3, 0x4C, 0x5A, 0x81, 0x6D, 0x00, 0x8B, 0xDD, 0xB4, 0x11, 0x54, 0x26, 0xDE, 0xD7,
    0xCA, 0x14, 0x9E, 0xA1, 0xCD, 0xA1, 0x66, 0xA4, 0x28, 0x1A, 0x6C, 0x63, 0x70, 0x63, 0x47, 0x2B,
    0x7A, 0xF3, 0x5B, 0xB3, 0xDA, 0x60, 0x2A, 0x18, 0x73, 0x1B, 0x23, 0x1B, 0x89, 0xE0, 0x91, 0xE1,
    0x44, 0x87, 0x5C, 0x34, 0x95, 0x81, 0x17, 0x45, 0xDE, 0xA4, 0x21, 0xFD, 0x28, 0x91, 0x1F, 0xB7,
    0xFD, 0x67, 0x2B, 0x8D, 0x62, 0x9D, 0xD6, 0x33, 0x83, 0x13, 0x02, 0x7A, 0x8C, 0x6C, 0xD3, 0x70,
    0x2A, 0x86, 0x63, 0x8F, 0x40, 0xB2, 0x13, 0xDB, 0xB2, 0x1C, 0x9A, 0x71, 0xCF, 0x06, 0x99, 0x06,
    0x8E, 0x5E, 0xB0, 0x8C, 0xC8, 0x68, 0xD8, 0x13, 0x08, 0x52, 0x35, 0xDF, 0x1D, 0xED, 0x0E, 0x8C,
    0x90, 0xEE, 0x6C, 0x97, 0xED, 0xB7, 0xED, 0x8B, 0xAB, 0x59, 0xFD, 0xE4, 0xD5, 0xC8, 0x6B, 0xC1,
    0x9F, 0xF3, 0x6E, 0x7F, 0x7C, 0xD0, 0x1F, 0xC1, 0xB7, 0x36, 0x3E, 0xB6, 0xDE, 0x74, 0x5A, 0x6F,
    0xE0, 0xA3, 0xB3, 0x51, 0xFA, 0x3C, 0xFC, 0x82, 0x0D, 0xED, 0x57, 0x56, 0xBB, 0xD7, 0x3F, 0x68,
    0xB5, 0x4E, 0x6A, 0xC7, 0xE7, 0xB3, 0x77, 0x27, 0x3B, 0xD8, 0xDD, 0x76, 0xEA, 0x57, 0x6F, 0xC7,
    0xF5, 0xFE, 0xE6, 0xF3, 0x89, 0x75, 0x64, 0x8D, 0xCD, 0x49, 0xBF, 0xF5, 0xE6, 0xDD, 0xD5, 0xED,
    0xF5, 0xA4, 0x3F, 0xEA, 0xBE, 0xDB, 0x18, 0x7F, 0xD8, 0x7C, 0xDB, 0xFD, 0xF0, 0xEE, 0xF0, 0x86,
    0xBE, 0x3F, 0x7A, 0xFD, 0xA1, 0x37, 0x03, 0x84, 0x7D, 0xAF, 0xDB, 0xBF, 0x6A, 0xBF, 0x6D, 0x8F,
    0x3E, 0xB4, 0xCD, 0x83, 0xF9, 0xC0, 0x39, 0x6F, 0xBF, 0x6A, 0x0D, 0x5A, 0x9B, 0x26, 0xA5, 0xA3,
    0xDE, 0x55, 0x7B, 0x7A, 0x7C, 0x72, 0x31, 0xB2, 0xED, 0x71, 0xF7, 0xC3, 0x79, 0xCF, 0xEC, 0x3C,
    0x3D, 0xED, 0x1F, 0xB5, 0xEC, 0xF1, 0xF9, 0xEB, 0xAB, 0xFA, 0xCD, 0xAB, 0x93, 0xCE, 0xBE, 0x79,
    0xFD, 0xFA, 0x7A, 0x67, 0x7F, 0xAB, 0xF6, 0xC7, 0x1F, 0x67, 0xD6, 0x85, 0xED, 0xF6, 0x6E, 0xBF,
    0xB6, 0x46, 0x9D, 0xD9, 0xB3, 0x45, 0xD8, 0x1B, 0x1F, 0xDF, 0xBA, 0xB5, 0xB7, 0xDE, 0xE7, 0xE3,
    0xC5, 0x19, 0xFC, 0xBB, 0xBC, 0x2C, 0x0D, 0xBA, 0x1B, 0x61, 0xFF, 0xCD, 0xF1, 0xDB, 0xCD, 0xF0,
    0xF9, 0x53, 0xBF, 0xBD, 0xBF, 0x7F, 0x3B, 0x19, 0x5C, 0xD6, 0x26, 0xD6, 0xCD, 0x30, 0x7A, 0xB6,
    0x15, 0xF9, 0xD7, 0xA3, 0xE9, 0x87, 0x2F, 0x4F, 0x5F, 0x8F, 0x6B, 0x17, 0xD4, 0xB8, 0x1E, 0x97,
    0x16, 0x5F, 0x17, 0xCF, 0xC6, 0xBD, 0xA3, 0xDB, 0x73, 0xC7, 0x98, 0x9F, 0x9F, 0x9B, 0x5F, 0x27,
    0x25, 0xC7, 0x78, 0x7E, 0xD1, 0x73, 0x8C, 0x60, 0xA3, 0x6F, 0xB5, 0x6A, 0xA5, 0xCE, 0x66, 0x6B,
    0x3B, 0x0A, 0xAE, 0x3A, 0xEE, 0xFE, 0xD6, 0xE7, 0xEE, 0xB3, 0x76, 0x7B, 0xC3, 0x1B, 0x7C, 0xD9,
    0x7C, 0x75, 0xB3, 0xF3, 0xAA, 0xBF, 0xF3, 0x66, 0xF0, 0xA6, 0xD5, 0xDD, 0x6E, 0xF7, 0x8D, 0xEB,
    0xEE, 0x9B, 0xD6, 0x70, 0x7B, 0x30, 0x1E, 0x9F, 0x9C, 0xF4, 0x0E, 0xAD, 0xD6, 0xD7, 0xA0, 0x75,
    0x31, 0x6B, 0xCD, 0x0F, 0xFA, 0xAD, 0xA3, 0xD2, 0xC9, 0xC1, 0x59, 0x7D, 0xA3, 0x7B, 0xBD, 0x35,
    0x3A, 0xDB, 0x99, 0xB5, 0xC3, 0x83, 0xD6, 0x9B, 0x76, 0x7D, 0xF4, 0xBA, 0x34, 0x31, 0x3E, 0x78,
    0x9D, 0xAD, 0xD1, 0xF1, 0x8E, 0x7D, 0x79, 0x6D, 0xB4, 0x8E, 0xDB, 0xAF, 0x43, 0xFB, 0x6A, 0x72,
    0xD4, 0xAF, 0xB7, 0x5A, 0xA7, 0x17, 0xF4, 0xB0, 0xB3, 0x65, 0x9C, 0x6C, 0x9A, 0xEF, 0x40, 0xFE,
    0xFD, 0xF7, 0xF4, 0x8F, 0x52, 0x6B, 0x76, 0x51, 0x77, 0xCC, 0xE7, 0xB4, 0x77, 0x74, 0xDD, 0x63,
    0xDA, 0x39, 0x70, 0x0E, 0x7B, 0x37, 0xDD, 0xE9, 0x9B, 0x49, 0xA7, 0x53, 0x28, 0x82, 0xE1, 0x56,
    0x02, 0xEA, 0x53, 0x23, 0xCA, 0x86, 0xE7, 0xC4, 0xF3, 0x30, 0xE4, 0xD6, 0x97, 0x0C, 0x57, 0x06,
    0x0D, 0x16, 0x11, 0x21, 0x95, 0x54, 0x2C, 0x6A, 0x7A, 0x81, 0xC1, 0x51, 0x80, 0x00, 0x0D, 0xD0,
    0x0E, 0x39, 0xD2, 0xBF, 0x59, 0x86, 0x21, 0x3C, 0xC1, 0x10, 0xC3, 0xB5, 0x88, 0x2E, 0x7D, 0x0B,
    0x83, 0x9E, 0x45, 0x6F, 0x6D, 0x93, 0x56, 0x7C, 0x7B, 0x4E, 0x9D, 0x0A, 0x23, 0xD1, 0xA8, 0x17,
    0x19, 0x61, 0x1C, 0x8D, 0x7D, 0x49, 0x9C, 0xD1, 0x70, 0xC1, 0x1C, 0xF9, 0x28, 0xB2, 0xC5, 0xFA,
    0x6C, 0x98, 0x14, 0x42, 0x39, 0xF8, 0xE2, 0x04, 0x3F, 0xB9, 0x53, 0x42, 0x72, 0x1D, 0x4C, 0x47,
    0x43, 0x7B, 0x0E, 0x2E, 0x31, 0xB4, 0x5D, 0x3B, 0xA2, 0x64, 0x23, 0x64, 0xB3, 0x04, 0x8E, 0xF0,
    0xE3, 0xDF, 0x92, 0xE4, 0x0D, 0x5D, 0x0C, 0x03, 0x63, 0x42, 0xC3, 0x7B, 0x53, 0x14, 0x3C, 0x0D,
    0x03, 0x0F, 0x12, 0x25, 0xE1, 0x0F, 0x4B, 0xF1, 0x0E, 0x06, 0x12, 0x5D, 0x91, 0xB7, 0x16, 0x4A,
    0xF0, 0x04, 0x3F, 0x8F, 0xA7, 0xBE, 0xE3, 0x19, 0x16, 0x0B, 0xC6, 0x6B, 0xC2, 0x9F, 0x92, 0x81,
    0x02, 0xEE, 0xDC, 0xCB, 0xE9, 0x48, 0xB8, 0xFD, 0xA6, 0x0C, 0x1A, 0xA9, 0x40, 0xB4, 0xB9, 0x9D,
    0x0E, 0x31, 0x15, 0x8E, 0xB9, 0x21, 0xD3, 0x4E, 0x4E, 0x9A, 0x96, 0x01, 0x8D, 0x3F, 0xB3, 0xC8,
    0xCF, 0x59, 0x8E, 0x40, 0xA9, 0xF7, 0x60, 0x37, 0x66, 0x44, 0x04, 0xB9, 0x1C, 0x96, 0x79, 0xF2,
    0xDB, 0x88, 0x93, 0x5F, 0x2C, 0xA9, 0x67, 0xD2, 0xFA, 0x1E, 0x53, 0x56, 0xD1, 0x94, 0xC9, 0x63,
    0x3F, 0x00, 0xA3, 0xA1, 0xB3, 0x87, 0x0C, 0x9C, 0x12, 0x55, 0x1E, 0x17, 0xC9, 0xC8, 0xBC, 0x82,
    0xE1, 0x52, 0x51, 0xAA, 0x98, 0x64, 0xD2, 0xF1, 0xF0, 0x2B, 0xA4, 0xC5, 0x21, 0x93, 0x29, 0x3C,
    0x8D, 0x67, 0x70, 0x6F, 0xFD, 0x6E, 0xED, 0xFC, 0xA6, 0xB2, 0xBD, 0x5D, 0xFF, 0x4D, 0x78, 0xA0,
    0xA4, 0xC0, 0xAD, 0x27, 0x2E, 0xD1, 0x36, 0xEA, 0xF5, 0xBA, 0x34, 0x29, 0x59, 0x81, 0x3D, 0x4B,
    0x78, 0x1F, 0x3C, 0xC5, 0xBF, 0xBB, 0xA4, 0xF6, 0x3B, 0x79, 0x15, 0xD0, 0x05, 0xF9, 0xBD, 0xA6,
    0x82, 0x56, 0xD8, 0x90, 0x0A, 0xF8, 0xD6, 0xF6, 0xF3, 0x67, 0xD6, 0x80, 0x81, 0xB7, 0x9D, 0x29,
    0xCD, 0x82, 0x4B, 0xF1, 0xDD, 0x1F, 0x23, 0x30, 0x2C, 0x7B, 0x1A, 0x42, 0x91, 0x58, 0xFF, 0x4D,
    0x30, 0x29, 0x6A, 0x9D, 0xCD, 0x6D, 0x29, 0xF5, 0x24, 0x57, 0xA9, 0x6D, 0x8A, 0xC3, 0x87, 0x3E,
    0x14, 0xC8, 0x9B, 0x21, 0xB3, 0x65, 0x23, 0x88, 0xFD, 0x5A, 0x00, 0xCA, 0x14, 0x98, 0x54, 0x13,
    0x10, 0x79, 0x12, 0xDF, 0x66, 0xC8, 0x42, 0x68, 0xF5, 0xDF, 0x40, 0x01, 0x51, 0x00, 0x95, 0xC0,
    0x10, 0x2A, 0x05, 0xA8, 0xC3, 0xBC, 0xC8, 0x88, 0xA8, 0x5E, 0xB7, 0xE8, 0xA8, 0xB8, 0xCB, 0x1D,
    0x92, 0xA0, 0x40, 0xF3, 0xC1, 0xB6, 0x76, 0x12, 0x40, 0xF8, 0xD9, 0xAB, 0xB1, 0x32, 0x86, 0xD5,
    0xD7, 0x66, 0x60, 0xFB, 0x11, 0x7C, 0xB3, 0x87, 0x44, 0xC7, 0x32, 0x1B, 0x0A, 0xFF, 0xF7, 0x67,
    0xA7, 0x47, 0x51, 0xE4, 0x5F, 0xD1, 0x2F, 0x53, 0x1A, 0x46, 0xA4, 0xD9, 0x6C, 0x12, 0x0D, 0xE3,
    0x23, 0xF0, 0x4E, 0x2D, 0xAD, 0xC8, 0x59, 0xCA, 0x02, 0x91, 0xE1, 0xD4, 0x35, 0x71, 0xD2, 0x44,
    0x2F, 0x4A, 0xA6, 0xA3, 0x60, 0x01, 0xEC, 0x04, 0x34, 0x9A, 0x06, 0x2E, 0x71, 0xC1, 0xF8, 0x5A,
    0x26, 0xD6, 0x8E, 0xEF, 0x2F, 0x06, 0x9F, 0x21, 0x38, 0xE9, 0xDA, 0x59, 0x38, 0x9F, 0x38, 0x9B,
    0x55, 0x24, 0xD5, 0xEB, 0x5D, 0x56, 0x77, 0xAA, 0x75, 0x0D, 0x79, 0x24, 0xA6, 0x11, 0x99, 0x63,
    0xA2, 0x53, 0x20, 0x74, 0xF7, 0x43, 0x94, 0xB6, 0x7E, 0x82, 0x92, 0x6D, 0x06, 0x5E, 0xE8, 0x0D,
    0x23, 0x49, 0x6C, 0x25, 0xA1, 0x71, 0xE0, 0xCD, 0x18, 0x85, 0x83, 0x20, 0xF0, 0x02, 0x5D, 0x63,
    0x0B, 0xAA, 0x01, 0x34, 0x42, 0x99, 0x45, 0x2C, 0x0F, 0x14, 0xE8, 0x7A, 0x11, 0x09, 0xA7, 0xBE,
    0xEF, 0x05, 0x51, 0x46, 0x5E, 0x55, 0x8D, 0x2F, 0x00, 0xEE, 0xA4, 0xDA, 0x63, 0xE9, 0x8D, 0xA8,
    0x6E, 0xF0, 0x54, 0x22, 0x78, 0xB4, 0x3C, 0x73, 0x8A, 0x21, 0xBD, 0x3A, 0xA2, 0xD1, 0x01, 0x8F,
    0xEE, 0xED, 0xC5, 0xB1, 0x05, 0x50, 0x1C, 0x37, 0xC6, 0x34, 0x57, 0x62, 0x42, 0x16, 0x03, 0x2B,
    0x10, 0xC8, 0x31, 0xA2, 0x82, 0x0A, 0xC5, 0x19, 0x10, 0x3D, 0xA1, 0x0B, 0xDD, 0x08, 0x02, 0x63,
    0x51, 0x26, 0x60, 0x84, 0x42, 0x8B, 0x82, 0x16, 0x6B, 0xAF, 0x22, 0x9C, 0x2E, 0xB1, 0x74, 0xA8,
    0x50, 0x07, 0xB1, 0xAE, 0x6F, 0xC1, 0xBC, 0xE7, 0x60, 0x06, 0xC6, 0x47, 0xC0, 0xFD, 0xB4, 0xCB,
    0x9E, 0x17, 0xF0, 0x3C, 0xE0, 0xCF, 0x1C, 0x48, 0x10, 0xD3, 0xF5, 0x39, 0xD9, 0x23, 0x30, 0xC2,
    0x4B, 0x52, 0xD9, 0x20, 0x0D, 0xF6, 0xFC, 0x82, 0x3F, 0xE3, 0x63, 0xBD, 0x28, 0x84, 0x13, 0x33,
    0xFA, 0xEB, 0x2F, 0x48, 0xEE, 0xCD, 0x94, 0x4E, 0xA9, 0x25, 0x24, 0x08, 0x32, 0xCE, 0xB1, 0xB9,
    0x08, 0x74, 0x50, 0xFD, 0x82, 0x70, 0xD0, 0xFB, 0x91, 0x0F, 0xCB, 0xDA, 0x82, 0xA9, 0xEB, 0x42,
    0x58, 0x43, 0x1C, 0xC3, 0x09, 0x69, 0xD2, 0x01, 0x76, 0x33, 0x06, 0xBD, 0x40, 0x87, 0x3B, 0x75,
    0x1C, 0x3E, 0x60, 0x66, 0xA0, 0xAA, 0x0F, 0x6E, 0xE4, 0xA1, 0x73, 0x00, 0x14, 0x1B, 0xE6, 0xCF,
    0x80, 0xF7, 0x35, 0x62, 0x0E, 0x74, 0x68, 0x29, 0x4A, 0xB3, 0x4F, 0x0F, 0x18, 0x05, 0x53, 0xE9,
    0xF0, 0xF6, 0x50, 0x7F, 0x04, 0x80, 0x10, 0x07, 0xC2, 0xC8, 0x70, 0x4D, 0x74, 0x36, 0x6E, 0x77,
    0x45, 0x21, 0x9A, 0xDD, 0x44, 0x98, 0xD1, 0xD8, 0x40, 0xB7, 0x42, 0x62, 0xA2, 0x55, 0xA4, 0x70,
    0x39, 0x67, 0xE3, 0xB3, 0x31, 0xEF, 0x0C, 0xF4, 0x79, 0xD9, 0x2A, 0xC6, 0x06, 0x1D, 0xB3, 0x23,
    0x79, 0xC1, 0x31, 0x89, 0x3E, 0xAF, 0x82, 0x05, 0x58, 0x8B, 0x2E, 0x06, 0x03, 0xF0, 0x67, 0xB2,
    0x9D, 0x74, 0x13, 0xB4, 0x38, 0x8D, 0x47, 0x68, 0xAD, 0x58, 0x65, 0x81, 0xA1, 0x2A, 0x02, 0x13,
    0x0C, 0xAF, 0x61, 0x6C, 0xD2, 0x76, 0x13, 0x68, 0xAB, 0x0A, 0x85, 0xB8, 0x83, 0x09, 0x04, 0xA8,
    0xC2, 0x2C, 0xA2, 0x69, 0x58, 0x26, 0x48, 0x3F, 0xF4, 0x3D, 0x37, 0xA4, 0x3D, 0x28, 0xAC, 0x8A,
    0x0A, 0x38, 0xCC, 0x18, 0x27, 0xC2, 0x75, 0x52, 0x75, 0xA8, 0x3B, 0x8A, 0xC6, 0x2C, 0xA2, 0xD4,
    0x8B, 0x6C, 0x86, 0xB9, 0x8A, 0x49, 0xA3, 0x0A, 0x08, 0x01, 0x2F, 0x45, 0xAF, 0x92, 0x0D, 0xC7,
    0xF6, 0x30, 0xD2, 0x8B, 0xC9, 0xB8, 0xC2, 0x45, 0xEF, 0xEE, 0x54, 0xC1, 0xAD, 0x9F, 0x27, 0x5B,
    0x7E, 0x68, 0x29, 0x49, 0xA3, 0x16, 0xD0, 0x30, 0x34, 0x2D, 0x51, 0x1F, 0x8C, 0x5E, 0xF5, 0x0D,
    0x88, 0xCF, 0xA1, 0xAA, 0xC4, 0x43, 0x08, 0xB6, 0xFB, 0xB0, 0xF0, 0x48, 0xC4, 0x8A, 0x78, 0x09,
    0x6C, 0x5C, 0x5D, 0x51, 0x98, 0xE2, 0x6A, 0x32, 0xC2, 0x16, 0x62, 0x22, 0x10, 0xC3, 0x89, 0x8E,
    0x5C, 0x80, 0x0B, 0xE1, 0x4E, 0x4B, 0x82, 0x15, 0xBB, 0x9D, 0x60, 0xCB, 0xE7, 0x51, 0x5A, 0x2B,
    0x26, 0xAD, 0xC8, 0x43, 0xA9, 0x49, 0xD8, 0x50, 0x13, 0x1A, 0x8D, 0x3D, 0x8B, 0xC3, 0xBC, 0x3A,
    0xE8, 0x69, 0xC5, 0x97, 0xDA, 0x4B, 0xAD, 0xA1, 0xA9, 0x7A, 0x45, 0xCE, 0x96, 0x90, 0xB5, 0x27,
    0x2A, 0x08, 0x6B, 0xE2, 0xBB, 0x41, 0xFD, 0xAB, 0xE3, 0x8E, 0x37, 0x01, 0x8D, 0x63, 0x40, 0xC1,
    0x60, 0x51, 0xD2, 0x9A, 0x5A, 0x29, 0xA7, 0x2F, 0x61, 0x99, 0xC5, 0x01, 0x45, 0x45, 0x6A, 0x2D,
    0x29, 0x25, 0x9E, 0xF5, 0x48, 0x08, 0xAE, 0xE9, 0xB8, 0xA9, 0x4B, 0x02, 0x2A, 0x64, 0xD5, 0x73,
    0x99, 0x79, 0xA3, 0x35, 0x52, 0x73, 0x6C, 0xB8, 0x23, 0x74, 0x54, 0xE1, 0x1E, 0x2A, 0x60, 0x19,
    0x25, 0x58, 0x4C, 0x2B, 0x73, 0x49, 0x34, 0xB1, 0x60, 0xD3, 0x43, 0xF8, 0xD4, 0x55, 0xE0, 0x19,
    0xA5, 0x2A, 0x2C, 0x38, 0x4B, 0x40, 0x14, 0x1D, 0x3C, 0x99, 0x58, 0x0A, 0x2D, 0xA4, 0xAE, 0x15,
    0xF3, 0x2C, 0xD4, 0xFF, 0xB0, 0x01, 0xB2, 0xE4, 0x99, 0xB2, 0x15, 0x9B, 0xE9, 0x46, 0x01, 0x3A,
    0x47, 0xA2, 0xA5, 0xCC, 0xF8, 0x91, 0x90, 0xDC, 0x11, 0x45, 0xCB, 0xD7, 0xB5, 0x8E, 0x07, 0x2B,
    0x70, 0x58, 0x20, 0x60, 0x38, 0xD3, 0xCA, 0x44, 0x33, 0x7C, 0xDF, 0x81, 0xB5, 0x35, 0x06, 0x8D,
    0xDA, 0xBC, 0x32, 0x9B, 0xCD, 0x2A, 0x58, 0x39, 0x54, 0x60, 0x64, 0xB1, 0xEF, 0xA7, 0xAD, 0x9B,
    0x9A, 0x5F, 0x54, 0xD5, 0x78, 0x57, 0xC6, 0xFF, 0x43, 0x56, 0x99, 0x2D, 0x45, 0x22, 0xE6, 0xCE,
    0x49, 0x60, 0x2C, 0xAE, 0x8E, 0xCB, 0x09, 0xAC, 0x34, 0x85, 0x27, 0x4F, 0xD2, 0x63, 0x2B, 0xD1,
    0x6C, 0x4F, 0x0D, 0x66, 0x29, 0x20, 0x63, 0x80, 0xD9, 0x2A, 0x87, 0x41, 0xA8, 0x70, 0x15, 0xFE,
    0xA4, 0xBC, 0x99, 0xAC, 0xB9, 0xA9, 0x96, 0x89, 0x8C, 0x71, 0xA9, 0x90, 0xCE, 0x83, 0x8D, 0x3F,
    0x0D, 0xC7, 0xFA, 0x37, 0x80, 0x6E, 0x20, 0x06, 0xC7, 0x6E, 0x08, 0x22, 0x1C, 0xBD, 0x21, 0xA8,
    0x48, 0x22, 0x0D, 0xF9, 0xE5, 0x4E, 0xB1, 0xBD, 0x47, 0x29, 0x61, 0xA4, 0x67, 0xA0, 0xC4, 0xB8,
    0x78, 0xD8, 0x4C, 0x8C, 0x53, 0x96, 0x60, 0x3C, 0x39, 0x0A, 0x94, 0x50, 0xB8, 0x4D, 0x26, 0x85,
    0x31, 0x31, 0xA8, 0xB5, 0x02, 0xAB, 0x08, 0x0E, 0x6D, 0x87, 0xF6, 0xC5, 0xFA, 0x4D, 0x17, 0x2B,
    0x47, 0xB4, 0x37, 0x4A, 0xCB, 0x84, 0xAF, 0x5B, 0x38, 0x63, 0x2C, 0xB7, 0x4F, 0x1C, 0xF4, 0x43,
    0x36, 0xBC, 0x6C, 0x0B, 0xE8, 0x10, 0xE2, 0x3E, 0xC4, 0x73, 0xAC, 0x3D, 0xB4, 0xC1, 0x14, 0x2A,
    0x6C, 0x57, 0x98, 0x8B, 0xE8, 0xAA, 0xDA, 0xAE, 0x4B, 0x83, 0xA3, 0xDE, 0xD9, 0x29, 0x00, 0x15,
    0xAE, 0x04, 0xFC, 0xA9, 0x1D, 0x46, 0x05, 0x06, 0x06, 0x31, 0x59, 0x8C, 0x5B, 0xAC, 0x82, 0x25,
    0x82, 0x49, 0x75, 0xC6, 0xB6, 0x63, 0xE9, 0x02, 0x9D, 0x73, 0xCD, 0x07, 0xE3, 0x7B, 0x6C, 0x7C,
    0x28, 0xF6, 0x5D, 0x8C, 0xC4, 0xBE, 0x57, 0x45, 0x76, 0xD6, 0x86, 0x30, 0x25, 0x4D, 0x69, 0x9F,
    0x4C, 0x9D, 0xC8, 0xF6, 0x1D, 0x9A, 0x32, 0x30, 0xDE, 0xE5, 0x42, 0x91, 0x8D, 0x28, 0xB8, 0x63,
    0xA4, 0xA2, 0xD8, 0x56, 0x53, 0xE3, 0xAB, 0x5A, 0xB1, 0x8A, 0xD6, 0xD6, 0xB2, 0xCA, 0x90, 0x8A,
    0x29, 0xB9, 0xF8, 0x46, 0x34, 0xCE, 0xE1, 0x14, 0x9B, 0x81, 0x3A, 0x8E, 0x29, 0xE8, 0x63, 0x8B,
    0x96, 0xF4, 0xC9, 0x49, 0xE0, 0xEE, 0x84, 0xD2, 0x2C, 0x19, 0xCD, 0x40, 0x43, 0x41, 0x6E, 0xC0,
    0xEC, 0xDE, 0x1A, 0x0E, 0xAB, 0x76, 0xB4, 0xDA, 0x7A, 0x3E, 0x11, 0x27, 0xCD, 0x26, 0x57, 0x58,
    0x9E, 0xF6, 0xF8, 0x43, 0x5A, 0x79, 0xDC, 0x50, 0xD6, 0xAB, 0x8D, 0xE3, 0xA5, 0x47, 0x99, 0xDC,
    0xA0, 0x4E, 0xF2, 0x46, 0xE1, 0x3D, 0xE9, 0x51, 0x3A, 0xCC, 0x30, 0xD7, 0x8F, 0xC2, 0xF1, 0x54,
    0xDB, 0xC0, 0x67, 0x26, 0x25, 0xFC, 0xB3, 0x2C, 0x78, 0xD9, 0x8D, 0xC2, 0x17, 0x20, 0x1A, 0xB7,
    0xEF, 0x8A, 0xEC, 0xD2, 0xD2, 0x80, 0x4C, 0x13, 0x1C, 0x30, 0x51, 0x46, 0xDC, 0x0B, 0x65, 0x83,
    0x31, 0x70, 0xA8, 0xA5, 0xD4, 0x76, 0x71, 0x1F, 0xEE, 0xE6, 0x73, 0xCC, 0xCD, 0xFA, 0xDA, 0x59,
    0x48, 0x0C, 0x75, 0x1E, 0xA1, 0x71, 0x4B, 0x57, 0x49, 0x4B, 0xF6, 0xA5, 0xE5, 0x45, 0xBA, 0xD0,
    0x0C, 0x1F, 0x6B, 0x87, 0x92, 0xA8, 0x72, 0xA8, 0x38, 0x0C, 0x60, 0x9C, 0xBC, 0xF4, 0xC2, 0xE8,
    0x32, 0xF0, 0x4C, 0x1A, 0x86, 0x32, 0xC9, 0xCA, 0xB2, 0x2E, 0x55, 0xD4, 0x25, 0x61, 0x9C, 0x77,
    0x93, 0x47, 0x38, 0xC5, 0x7A, 0x9C, 0x79, 0x0C, 0x87, 0x42, 0xB8, 0xD5, 0x0E, 0xAE, 0xAE, 0x2E,
    0xAE, 0x3E, 0x6A, 0x25, 0x0E, 0x54, 0xD2, 0x3E, 0x35, 0x88, 0x56, 0xCA, 0xAB, 0x0E, 0xD5, 0x82,
    0x03, 0x43, 0x4E, 0x55, 0xF8, 0xFC, 0x25, 0xD8, 0x29, 0x33, 0xD6, 0xEA, 0x2D, 0x5A, 0xB6, 0x58,
    0x0A, 0xA4, 0xD8, 0xE6, 0xD1, 0x8B, 0x03, 0x4A, 0xBE, 0x98, 0x19, 0x88, 0x32, 0x4C, 0xC4, 0x40,
    0x59, 0x95, 0xC5, 0x39, 0x40, 0xF6, 0x0B, 0xE1, 0xE8, 0xDC, 0xA3, 0x20, 0xEA, 0x4B, 0x00, 0x19,
    0x44, 0xAB, 0x90, 0x22, 0x74, 0xED, 0xB2, 0xDF, 0xC3, 0x0C, 0x59, 0x43, 0x53, 0x81, 0x2F, 0x12,
    0xBB, 0xBC, 0x42, 0x6C, 0x0A, 0xA7, 0x8A, 0x75, 0x7B, 0xAE, 0x09, 0xF9, 0xF5, 0x46, 0x59, 0xAC,
    0xC0, 0x22, 0x52, 0xF0, 0xAC, 0xCE, 0x23, 0x33, 0x61, 0x22, 0x02, 0x30, 0xDB, 0x3B, 0xE9, 0x07,
    0x4E, 0x0E, 0x40, 0xD2, 0xD2, 0x94, 0xBE, 0x7F, 0x27, 0x14, 0x1C, 0xDB, 0xCA, 0xBA, 0xD1, 0xC5,
    0x00, 0x74, 0x4E, 0x4D, 0xA8, 0xD7, 0x26, 0x06, 0x08, 0xA4, 0x80, 0x88, 0xE2, 0xA1, 0x90, 0xAC,
    0x50, 0xF9, 0x84, 0x64, 0x48, 0x5F, 0x47, 0xF3, 0xFB, 0x8A, 0x8C, 0xC9, 0x89, 0x18, 0xB3, 0x8E,
    0x1A, 0xD8, 0x1A, 0x0F, 0xC9, 0x38, 0x97, 0x30, 0xBD, 0x7A, 0x88, 0x33, 0x66, 0x6A, 0xE1, 0x74,
    0xF7, 0x13, 0xC6, 0xC0, 0xF2, 0x40, 0x99, 0x28, 0x23, 0x7E, 0xAC, 0x7F, 0x2A, 0x93, 0x65, 0xC1,
    0x67, 0xAC, 0xE4, 0xA2, 0xFB, 0x03, 0x66, 0xC2, 0x79, 0xE4, 0x69, 0x00, 0x05, 0xD5, 0x64, 0xCB,
    0x13, 0x35, 0x2D, 0x48, 0xB8, 0x04, 0x26, 0xA3, 0x6C, 0x95, 0x44, 0x97, 0x25, 0xAA, 0x14, 0x11,
    0x91, 0xBB, 0xD2, 0x64, 0x38, 0x9C, 0x24, 0xA4, 0x29, 0x2A, 0xE1, 0xD3, 0x06, 0x6D, 0xC8, 0xFA,
    0xF9, 0x61, 0xEA, 0x58, 0x5E, 0xBF, 0xC6, 0x31, 0xB9, 0x99, 0x11, 0x29, 0xCB, 0x67, 0x0A, 0x20,
    0xC4, 0x04, 0x80, 0xA9, 0xE9, 0x2F, 0x1B, 0xFF, 0xA9, 0xEA, 0x1F, 0xFF, 0x5B, 0xFD, 0x54, 0x2A,
    0x16, 0x5F, 0xFE, 0xAB, 0xC6, 0x0C, 0x33, 0x89, 0x92, 0x1F, 0x37, 0x3E, 0x29, 0x38, 0x82, 0x70,
    0x4D, 0xAF, 0xFE, 0x5E, 0xFC, 0x4F, 0x95, 0x21, 0xAD, 0xC1, 0xC0, 0x72, 0x92, 0x6F, 0x6D, 0x31,
    0xBC, 0x47, 0xC0, 0x71, 0xBC, 0x9F, 0xA5, 0xAC, 0xB6, 0x12, 0x86, 0x15, 0x0E, 0xEF, 0xB2, 0xCE,
    0xC6, 0x53, 0x6D, 0x49, 0x42, 0x97, 0xB4, 0x2A, 0x2C, 0x7C, 0xE6, 0xD1, 0x8A, 0xED, 0x1C, 0xEE,
    0xE2, 0x3D, 0x70, 0x8B, 0xA4, 0xC0, 0xCA, 0x96, 0x56, 0x72, 0x6B, 0x96, 0xAB, 0x4F, 0x3C, 0x09,
    0xC5, 0xB1, 0x9D, 0x00, 0xC0, 0xBE, 0xF2, 0x3C, 0x59, 0xFC, 0x58, 0xF6, 0xAD, 0xE8, 0x94, 0x1D,
    0x55, 0xD3, 0x31, 0xC2, 0xF0, 0x5C, 0x94, 0x09, 0xD1, 0xED, 0x74, 0x7D, 0x25, 0x20, 0xD1, 0x96,
    0xD2, 0x01, 0x5A, 0xC8, 0xBE, 0x37, 0x73, 0xF1, 0x93, 0xD7, 0x0B, 0xDF, 0xE2, 0xA5, 0x73, 0xC1,
    0x12, 0x1D, 0x15, 0xB6, 0x3B, 0x59, 0x80, 0x25, 0x74, 0x60, 0x32, 0x59, 0xE0, 0x74, 0x5E, 0xCA,
    0x5E, 0x58, 0x05, 0x22, 0xA2, 0x0C, 0x85, 0x4B, 0xE4, 0x2F, 0xF9, 0xEC, 0x52, 0xD4, 0x99, 0x11,
    0x58, 0x43, 0x21, 0x7B, 0x94, 0x41, 0x36, 0x39, 0x27, 0x31, 0x91, 0x41, 0x09, 0xFB, 0x8D, 0x07,
    0x22, 0x0A, 0xD2, 0xF7, 0xF6, 0x30, 0x84, 0x78, 0xBF, 0xB3, 0x01, 0x20, 0xA1, 0x52, 0xB9, 0x76,
    0xCF, 0x9E, 0x8C, 0x08, 0xCC, 0xBA, 0x29, 0xE6, 0x8C, 0xFF, 0x35, 0x0B, 0x6C, 0xBE, 0xA5, 0xC2,
    0x93, 0x3F, 0xCD, 0x01, 0x3C, 0x80, 0xE7, 0xD3, 0xAA, 0xEB, 0xCD, 0xF4, 0x62, 0xA9, 0xA0, 0x11,
    0x36, 0x48, 0x53, 0x9B, 0x18, 0x73, 0x71, 0x4E, 0x8E, 0x3B, 0xB4, 0xBB, 0x04, 0x9F, 0xC5, 0xC6,
    0xB1, 0x6C, 0x60, 0x07, 0xCD, 0xC6, 0x34, 0xF2, 0x76, 0xE3, 0x5D, 0x61, 0x7E, 0x20, 0xAA, 0x91,
    0xDA, 0x8B, 0x42, 0xAE, 0x38, 0x41, 0x3A, 0x0E, 0x56, 0xF0, 0x67, 0xD4, 0x9D, 0x82, 0xA2, 0x79,
    0xA4, 0x52, 0x65, 0x8A, 0x07, 0xD6, 0xC2, 0x66, 0xA6, 0x4E, 0x22, 0x43, 0x27, 0x65, 0x0C, 0x08,
    0xA4, 0x86, 0x24, 0x83, 0x13, 0xE7, 0x68, 0x8E, 0x1D, 0xA3, 0x21, 0x5C, 0x0A, 0x91, 0x03, 0x2A,
    0x2B, 0x1A, 0x3B, 0x3C, 0xC6, 0x63, 0x57, 0x64, 0x89, 0xAB, 0x37, 0x71, 0x2D, 0x0E, 0x9B, 0x92,
    0xA6, 0xB6, 0x87, 0x67, 0x72, 0x2F, 0x84, 0x3D, 0xEC, 0xD5, 0xD8, 0x53, 0xB2, 0xDB, 0x20, 0x30,
    0xD6, 0x65, 0x07, 0xC6, 0x55, 0xD6, 0xA4, 0xD2, 0xFB, 0x47, 0xF1, 0x0E, 0xE8, 0xC0, 0xB3, 0x16,
    0xCA, 0x06, 0x6A, 0xD8, 0x5E, 0x74, 0xA4, 0xCB, 0xE8, 0x05, 0x73, 0x02, 0xD6, 0x2C, 0xA2, 0xD9,
    0x0B, 0x8C, 0x65, 0x69, 0xB4, 0x80, 0x4E, 0x3C, 0xC8, 0x8A, 0x6C, 0xD2, 0xD4, 0xC9, 0xD9, 0xC1,
    0x88, 0x77, 0x75, 0xEC, 0x10, 0x0B, 0x9C, 0x87, 0x09, 0x00, 0x6F, 0xBC, 0xFC, 0xE8, 0xEC, 0x73,
    0x4A, 0x84, 0x7F, 0x44, 0x00, 0x89, 0xF5, 0xC8, 0x30, 0x70, 0x0F, 0xFB, 0x91, 0xA0, 0x12, 0x40,
    0x3E, 0xE7, 0x09, 0x49, 0x06, 0xA5, 0x8C, 0xA0, 0x62, 0x94, 0xF5, 0x82, 0x5A, 0x0E, 0x6B, 0xEA,
    0x6E, 0xCA, 0xDF, 0x28, 0xA2, 0x3B, 0xC5, 0xAF, 0x2C, 0xCA, 0x9C, 0xF5, 0x3E, 0x82, 0xE1, 0x90,
    0xB1, 0x5C, 0xF8, 0x63, 0xAE, 0x58, 0x20, 0xBC, 0x47, 0x34, 0x2B, 0x14, 0x01, 0xBF, 0x5E, 0x26,
    0x58, 0x9B, 0x70, 0xF4, 0x7F, 0x40, 0x22, 0xD9, 0x48, 0x16, 0x8E, 0xBD, 0x19, 0xDB, 0x97, 0x9A,
    0x47, 0x3C, 0x98, 0xDD, 0xB2, 0x3C, 0x89, 0x8C, 0x41, 0x3D, 0x16, 0xB2, 0xA5, 0x8B, 0x12, 0xD7,
    0x20, 0x01, 0x0A, 0xE8, 0xA5, 0x8C, 0x28, 0x96, 0x51, 0x66, 0xE0, 0x39, 0x4E, 0xCF, 0xC3, 0x3D,
    0xC4, 0x34, 0x57, 0x49, 0xCF, 0xCB, 0x95, 0x3D, 0x8D, 0xA4, 0x47, 0x7E, 0x11, 0x02, 0x48, 0x80,
    0x96, 0x06, 0x3B, 0xA5, 0xC3, 0x68, 0xC5, 0x68, 0xAC, 0x2B, 0x7F, 0x38, 0xD6, 0xF5, 0xDD, 0xF1,
    0x10, 0x4A, 0x19, 0xD0, 0xE1, 0x43, 0x31, 0x21, 0x41, 0xE6, 0xB7, 0xE1, 0xE3, 0x3D, 0x29, 0x91,
    0x5C, 0xD8, 0x88, 0xC9, 0x40, 0x05, 0xBD, 0x8E, 0x41, 0x93, 0x69, 0x24, 0x02, 0x4D, 0x55, 0x12,
    0xA8, 0xE2, 0x65, 0x88, 0x6C, 0xE2, 0x2C, 0xB0, 0x3C, 0xB5, 0x12, 0x50, 0x70, 0xCB, 0x3E, 0x4A,
    0xA4, 0xE0, 0xCF, 0x57, 0x42, 0x72, 0x5E, 0xF1, 0xFF, 0x14, 0x5C, 0x2A, 0xCD, 0x25, 0x48, 0x22,
    0xDD, 0xC5, 0x91, 0x40, 0x15, 0x6E, 0xCA, 0x9B, 0x62, 0x0C, 0xD5, 0x42, 0x58, 0x36, 0x46, 0x7D,
    0x25, 0x4C, 0x78, 0xC3, 0x61, 0x48, 0xA3, 0x77, 0xD8, 0xA1, 0x00, 0xF2, 0x34, 0x9D, 0x07, 0x79,
    0xC4, 0x7A, 0x96, 0x27, 0xE3, 0xB9, 0x13, 0x6F, 0x1A, 0x52, 0x6F, 0x1A, 0xAD, 0x70, 0x3D, 0xF0,
    0x30, 0x1A, 0xEB, 0x6D, 0x8F, 0x4B, 0xE6, 0x7F, 0xFF, 0x23, 0x49, 0xDB, 0x0B, 0xA2, 0x0B, 0x71,
    0x31, 0x36, 0x8B, 0x6A, 0xEF, 0x35, 0x60, 0xA0, 0x88, 0x52, 0x4D, 0x80, 0xC0, 0xC5, 0xC6, 0xB9,
    0x2D, 0xAA, 0x39, 0xE2, 0xEF, 0xF0, 0xE7, 0x65, 0x99, 0x26, 0x47, 0x2E, 0xB9, 0x0E, 0x9E, 0x54,
    0xC1, 0xA7, 0xD4, 0x18, 0xEA, 0xDC, 0xB1, 0xB1, 0x92, 0x2B, 0x13, 0xDC, 0x2F, 0x49, 0x15, 0x2D,
    0x00, 0x90, 0x13, 0x24, 0xA1, 0x95, 0x6F, 0x9D, 0x65, 0x16, 0x0F, 0x8E, 0x31, 0xA0, 0x8E, 0x80,
    0xC7, 0x30, 0x98, 0x60, 0x60, 0x47, 0x2A, 0x68, 0x2A, 0x98, 0x8C, 0x5C, 0xAA, 0x0A, 0x42, 0xE8,
    0xD4, 0x60, 0xEB, 0xC3, 0x67, 0x3A, 0xD9, 0x0B, 0xEE, 0xC0, 0x82, 0x4F, 0xBD, 0x19, 0x0D, 0x3A,
    0x46, 0x48, 0xF5, 0x62, 0x71, 0x4D, 0xA6, 0x16, 0x08, 0x8A, 0xF4, 0x94, 0x1A, 0x22, 0xA9, 0xA2,
    0xBE, 0x4F, 0x57, 0xAD, 0x7F, 0x96, 0x89, 0xA6, 0xB3, 0x90, 0x9C, 0x16, 0xD7, 0x1C, 0x68, 0x76,
    0xBA, 0x62, 0x72, 0xB4, 0x8A, 0xE5, 0x2F, 0x68, 0x7E, 0x9F, 0xEF, 0x30, 0xEA, 0x09, 0x49, 0x5A,
    0xC5, 0xDD, 0x7D, 0x58, 0xD0, 0xFA, 0xC6, 0xC8, 0xE0, 0xDB, 0xFB, 0x71, 0xDF, 0x52, 0x14, 0x2F,
    0x4B, 0xB5, 0xA5, 0xCF, 0x30, 0x24, 0x3F, 0xE2, 0xC8, 0x12, 0x61, 0x72, 0x8D, 0x06, 0x56, 0xD7,
    0xB8, 0x51, 0x0C, 0xD6, 0x12, 0xA8, 0xE9, 0x20, 0xA2, 0x93, 0x50, 0xF2, 0x9A, 0x9C, 0x5B, 0xB3,
    0xE6, 0x32, 0x29, 0xB8, 0x6C, 0x6D, 0xA2, 0x1A, 0x48, 0x6E, 0x11, 0xCC, 0x69, 0xAE, 0x2D, 0x84,
    0x1D, 0x34, 0x2B, 0x46, 0x56, 0x78, 0x45, 0xB2, 0x6F, 0xC0, 0xCE, 0xE4, 0x6C, 0xE8, 0xAE, 0xEF,
    0xC2, 0x07, 0xB8, 0xB0, 0x03, 0x9F, 0xA5, 0x52, 0xDA, 0x3C, 0x10, 0xF3, 0xA3, 0xFD, 0x49, 0x6C,
    0xEA, 0x36, 0xE5, 0xDE, 0xB4, 0x72, 0x52, 0xB3, 0x94, 0xF9, 0x73, 0xDD, 0x24, 0x26, 0xC4, 0xFD,
    0x25, 0x7E, 0x64, 0x8E, 0xA3, 0x1C, 0x07, 0xE4, 0x89, 0x30, 0x5B, 0x90, 0xAA, 0x0B, 0xAE, 0x75,
    0xAB, 0x6E, 0x06, 0x9C, 0xB7, 0x7E, 0x46, 0xAC, 0x15, 0xCB, 0xE7, 0x70, 0x66, 0x47, 0xE6, 0x58,
    0x57, 0xB6, 0x0A, 0xF1, 0x8F, 0x09, 0x36, 0x0B, 0x4B, 0xD2, 0x79, 0xA4, 0x35, 0xB2, 0x8D, 0xE3,
    0x68, 0x92, 0xDB, 0xE8, 0x2C, 0xB7, 0x7E, 0x0E, 0x97, 0xDB, 0xF0, 0x22, 0xF8, 0x52, 0xE3, 0x3C,
    0x1F, 0xDB, 0x73, 0x73, 0xF0, 0x3D, 0x77, 0xB8, 0xDC, 0x6A, 0xBB, 0x76, 0x0E, 0x53, 0x39, 0xD8,
    0x39, 0x4D, 0xBE, 0xBF, 0xDC, 0xE8, 0x8F, 0x73, 0x1A, 0xC7, 0x74, 0x9E, 0x37, 0xB2, 0x97, 0x83,
    0x6E, 0xD1, 0xE5, 0xC6, 0x99, 0x43, 0xAD, 0xE5, 0x56, 0xC7, 0x1B, 0xA9, 0x8D, 0xC2, 0xBB, 0x94,
    0xCB, 0x07, 0x49, 0x40, 0x48, 0xF9, 0x5F, 0x72, 0x2C, 0xB2, 0x6C, 0x3D, 0x99, 0x05, 0xDD, 0x3F,
    0x65, 0x3E, 0xBE, 0x3B, 0xCA, 0xD1, 0xAA, 0x9F, 0xD3, 0x38, 0xB2, 0x73, 0x74, 0x3A, 0x98, 0xF8,
    0x7F, 0x8D, 0x64, 0xF8, 0x91, 0x5D, 0xB2, 0xBB, 0xA9, 0xC6, 0x4F, 0x55, 0x40, 0xF1, 0xBE, 0x8C,
    0x9A, 0x34, 0x93, 0xCD, 0x1A, 0x7C, 0x3C, 0xF7, 0x2C, 0xB6, 0x19, 0x26, 0x1D, 0x18, 0xEB, 0xF1,
    0x57, 0x34, 0x8A, 0xA1, 0x70, 0x43, 0x51, 0xB9, 0x23, 0x94, 0xD2, 0x0B, 0x54, 0xF8, 0x9D, 0x41,
    0x6A, 0xC0, 0xEC, 0xED, 0x8F, 0x75, 0x1B, 0xF8, 0x39, 0x5B, 0xF8, 0x8A, 0xC0, 0x1F, 0xBA, 0x8B,
    0xBF, 0x7C, 0xAA, 0xFD, 0x43, 0xD3, 0xFF, 0x8E, 0x08, 0xB2, 0x2A, 0xCA, 0x5A, 0xAA, 0xB2, 0x9A,
    0x89, 0xB7, 0xFF, 0x14, 0x63, 0xFD, 0xD1, 0x73, 0x01, 0xF5, 0x88, 0x86, 0x8B, 0x59, 0xDD, 0xF8,
    0xDD, 0x3F, 0x38, 0x3D, 0xE8, 0x1D, 0xE4, 0x6F, 0xFD, 0x72, 0x15, 0xC5, 0xF8, 0xC5, 0x5C, 0xFF,
    0x82, 0x4A, 0x8C, 0xE9, 0x31, 0x49, 0x6F, 0x3F, 0xAB, 0xCF, 0x66, 0xFA, 0x48, 0x86, 0xAC, 0xC8,
    0xA1, 0xAF, 0xBB, 0x17, 0xE7, 0x78, 0x2B, 0x03, 0xCA, 0x89, 0x14, 0xC5, 0xEC, 0xE1, 0xF2, 0x92,
    0x8C, 0x51, 0x3D, 0xF9, 0xFC, 0xAA, 0x82, 0xC1, 0x6B, 0x14, 0x8A, 0x54, 0xBE, 0xB1, 0x44, 0xD7,
    0xE0, 0xA7, 0xA2, 0x77, 0xE5, 0xBC, 0x69, 0xA7, 0xE4, 0xB3, 0xC6, 0x0E, 0xA4, 0xEB, 0xF2, 0x3B,
    0x51, 0x79, 0x3B, 0xAD, 0xFC, 0x05, 0xA2, 0x64, 0xAF, 0x15, 0x55, 0x50, 0x66, 0x6F, 0x1D, 0x95,
    0xF1, 0x85, 0x26, 0xCC, 0xA0, 0x18, 0x8B, 0x38, 0xE3, 0xAA, 0x26, 0x4E, 0x01, 0xE4, 0x30, 0xF0,
    0x26, 0x87, 0x42, 0x67, 0xB9, 0x86, 0x84, 0x74, 0xD8, 0x49, 0x2C, 0xBE, 0x2F, 0xA5, 0xEE, 0xC2,
    0x3F, 0x74, 0x0F, 0xFB, 0xAF, 0xC9, 0xA8, 0x59, 0x7E, 0xC8, 0x00, 0x64, 0x70, 0xB3, 0x9B, 0x85,
    0x65, 0xE9, 0xE6, 0x9E, 0xB0, 0x3C, 0x2B, 0xDE, 0x13, 0x98, 0x27, 0xA2, 0x7B, 0x02, 0xB3, 0xFC,
    0x74, 0x5F, 0x8E, 0xB1, 0x34, 0x88, 0x61, 0x59, 0x4D, 0xB0, 0x0A, 0x14, 0x4B, 0x83, 0x18, 0xF2,
    0xB3, 0x71, 0x6B, 0xF0, 0x1B, 0xAD, 0xAB, 0x49, 0x2B, 0xE0, 0xE6, 0x9F, 0x98, 0xB3, 0x57, 0x8A,
    0xE2, 0xFE, 0x90, 0x98, 0xF9, 0xEF, 0x0B, 0x9B, 0x57, 0xB6, 0x84, 0xB9, 0xAD, 0xF9, 0xB5, 0xC3,
    0x8A, 0x02, 0x29, 0xAF, 0xC4, 0xC9, 0xAD, 0x86, 0x58, 0x85, 0x43, 0x24, 0xB7, 0xF2, 0xE4, 0x22,
    0x76, 0xFB, 0x6C, 0x12, 0x44, 0x38, 0xD5, 0x3B, 0x13, 0xCB, 0xE5, 0x07, 0xD5, 0xD9, 0xCB, 0xC1,
    0xE2, 0xF8, 0x5A, 0xAB, 0xB1, 0x4B, 0xDE, 0x55, 0xAE, 0xBB, 0x2C, 0x2A, 0x1F, 0x3C, 0x83, 0xFA,
    0x4D, 0x2E, 0xDC, 0x18, 0x63, 0xAB, 0x5C, 0xB2, 0x98, 0xCF, 0x0C, 0xF3, 0xED, 0x65, 0x6E, 0x44,
    0x33, 0x3F, 0xC5, 0x9F, 0x40, 0x7C, 0x58, 0xE6, 0x25, 0xA9, 0xCF, 0x97, 0x79, 0x51, 0x2F, 0x64,
    0xD4, 0xB4, 0x52, 0x2C, 0x0B, 0x86, 0x9F, 0x4C, 0x82, 0x6B, 0xBC, 0x98, 0x06, 0x57, 0x62, 0xC4,
    0x5D, 0x72, 0xC2, 0xCF, 0x17, 0x82, 0x78, 0x3D, 0xCD, 0xA4, 0x55, 0x7C, 0x88, 0x8F, 0x68, 0x76,
    0x97, 0xA2, 0xED, 0xCF, 0x9E, 0xCC, 0x3F, 0x30, 0x99, 0xDF, 0xE5, 0x32, 0x10, 0x47, 0x2F, 0x48,
    0x6A, 0x2C, 0xB5, 0x25, 0xE1, 0xF3, 0xE7, 0xCE, 0x59, 0x11, 0xB8, 0xED, 0x78, 0x03, 0xFD, 0x23,
    0x36, 0x7C, 0xC2, 0x3C, 0x81, 0xA4, 0x1B, 0x5C, 0x8A, 0x77, 0xC5, 0xEF, 0xA5, 0xDF, 0x1F, 0x3B,
    0x77, 0x5D, 0x9E, 0x24, 0xA4, 0x9A, 0x07, 0x08, 0x99, 0xA4, 0xCF, 0xE8, 0xBE, 0x77, 0x5F, 0x76,
    0xFD, 0xB9, 0x54, 0xEA, 0xC8, 0x69, 0x6D, 0x1E, 0x17, 0xFB, 0x07, 0x21, 0xE5, 0xD7, 0x7D, 0xF4,
    0xFC, 0x52, 0x2C, 0x7D, 0x87, 0x33, 0x8B, 0xA3, 0x29, 0xC5, 0x94, 0xE8, 0x33, 0x61, 0xF1, 0x1D,
    0xF0, 0x33, 0xE1, 0x64, 0x2D, 0x9F, 0x2B, 0x22, 0x1D, 0x3C, 0xA9, 0x1F, 0x38, 0xEA, 0xB1, 0xFB,
    0xDA, 0x94, 0x8F, 0x5F, 0x1A, 0x84, 0x23, 0x61, 0xD2, 0xCF, 0x95, 0x74, 0xD6, 0x97, 0x99, 0x47,
    0x61, 0x32, 0x14, 0xE9, 0xA1, 0x28, 0xF9, 0x84, 0x60, 0xD0, 0x05, 0x34, 0xC6, 0x23, 0x4E, 0xE8,
    0x0C, 0xCA, 0x47, 0x5D, 0x03, 0x17, 0xAA, 0x4D, 0xE0, 0x9B, 0xF0, 0x4C, 0x4E, 0x2D, 0x99, 0x75,
    0x0F, 0x7D, 0x9F, 0x43, 0xB1, 0x30, 0x00, 0x60, 0xEC, 0x33, 0x05, 0xF7, 0x2F, 0xA6, 0x83, 0x2E,
    0xDB, 0x10, 0xE5, 0xF7, 0x10, 0x8F, 0xF9, 0x3B, 0x1A, 0x0B, 0x15, 0x2A, 0x3B, 0x7E, 0x3F, 0xA4,
    0x5D, 0x6F, 0x18, 0xF5, 0x8C, 0x41, 0xA8, 0x27, 0x5B, 0x1B, 0x2B, 0x80, 0x01, 0xAA, 0x0B, 0x6B,
    0x75, 0x7D, 0x33, 0xCB, 0xE0, 0x91, 0x3D, 0x1A, 0x3B, 0xB8, 0x61, 0xC7, 0x5F, 0x41, 0x38, 0x85,
    0xD0, 0xB3, 0x4C, 0x0D, 0xE0, 0xBA, 0x63, 0x6F, 0x76, 0x19, 0xD8, 0x6E, 0x74, 0xC6, 0x8E, 0x09,
    0x75, 0xB6, 0x2E, 0x49, 0x01, 0x99, 0xFC, 0xCA, 0x06, 0x53, 0x86, 0xBC, 0xCB, 0x11, 0x6B, 0x0A,
    0x5D, 0xA8, 0x41, 0x52, 0x57, 0x3B, 0xCA, 0xB2, 0x6F, 0x00, 0x51, 0xFA, 0x84, 0x2E, 0x1A, 0xE4,
    0xDB, 0x0C, 0x5F, 0x74, 0x2D, 0x74, 0xA2, 0xC0, 0xA9, 0x74, 0x0B, 0x65, 0x7C, 0xC1, 0xD3, 0xC4,
    0x67, 0x8E, 0x00, 0x4D, 0x77, 0x31, 0x0E, 0xD6, 0x34, 0xCA, 0xFD, 0x49, 0x71, 0x9A, 0xAD, 0x2E,
    0x00, 0x52, 0xB1, 0xA3, 0xAC, 0xC8, 0x85, 0x1B, 0x62, 0xB1, 0xA4, 0x69, 0x22, 0x8E, 0x24, 0xB9,
    0xA7, 0x9C, 0x18, 0x96, 0x61, 0x5D, 0xB8, 0xF8, 0xF2, 0x33, 0x9B, 0x27, 0xB3, 0x90, 0x07, 0x4F,
    0x16, 0x42, 0xB9, 0x77, 0xBF, 0xC9, 0x7E, 0x58, 0x9E, 0xEC, 0x87, 0x07, 0x4D, 0x36, 0x4F, 0xEB,
    0xF0, 0xD0, 0x07, 0x0E, 0xCE, 0x0C, 0x17, 0xD6, 0xCF, 0x01, 0x34, 0x20, 0x3F, 0xAA, 0xDE, 0xFE,
    0x86, 0x29, 0x07, 0xF4, 0xBE, 0x53, 0xEE, 0xE2, 0x55, 0xD2, 0xBC, 0x89, 0xCB, 0x8E, 0xBF, 0x7C,
    0xFA, 0xC8, 0xDB, 0x4F, 0x4C, 0x5F, 0x6C, 0x9B, 0xAA, 0xCB, 0xED, 0xBC, 0xEA, 0xFC, 0x47, 0xEE,
    0x10, 0xC8, 0x6E, 0x99, 0xAC, 0x78, 0xF5, 0x92, 0x69, 0xBD, 0x57, 0x49, 0x72, 0x9F, 0x6A, 0xE1,
    0x27, 0x63, 0x5B, 0xB2, 0x36, 0x52, 0x2A, 0x21, 0x75, 0x61, 0xC4, 0x49, 0xEE, 0xA6, 0xDF, 0x0B,
    0xF2, 0xDC, 0xB6, 0x67, 0x2D, 0x4E, 0xF1, 0xF0, 0x33, 0xB9, 0x73, 0x02, 0xFF, 0xF0, 0xAA, 0xF0,
    0x37, 0x8E, 0xCE, 0x2F, 0xAD, 0x06, 0xEC, 0xF6, 0x30, 0x18, 0x8A, 0xE5, 0xCD, 0x40, 0xE6, 0xFC,
    0x52, 0x78, 0x75, 0x1C, 0xD0, 0x21, 0x28, 0x10, 0xB8, 0x36, 0xA9, 0x5E, 0xFB, 0xF8, 0xF2, 0xC9,
    0xA7, 0x12, 0xAC, 0x70, 0x9A, 0xF0, 0x51, 0x6C, 0xC2, 0x97, 0x27, 0x9F, 0x7E, 0x2F, 0xD6, 0x46,
    0x76, 0x59, 0xB9, 0x50, 0x5D, 0xBE, 0xA1, 0x8B, 0x32, 0xBF, 0x31, 0x05, 0x99, 0x00, 0x47, 0x62,
    0x77, 0xFF, 0x81, 0x36, 0x6B, 0xDC, 0x95, 0xDA, 0x4D, 0xD5, 0x43, 0xA9, 0xE5, 0x9B, 0xCC, 0x99,
    0x65, 0x86, 0x5D, 0xE5, 0x61, 0x84, 0x7D, 0xE5, 0x2B, 0x39, 0xF6, 0x55, 0x09, 0xE6, 0xF2, 0x96,
    0x4C, 0x4C, 0x87, 0x5D, 0xB8, 0xD1, 0xB0, 0x49, 0x8B, 0xEF, 0xDB, 0x30, 0xC8, 0x9C, 0x8B, 0xCF,
    0x9A, 0x7C, 0x85, 0x55, 0xCB, 0xDC, 0x7D, 0xDE, 0x4D, 0x17, 0x8A, 0x31, 0x2B, 0xCB, 0x65, 0xA6,
    0xD2, 0xA5, 0x56, 0xBE, 0x5A, 0x8E, 0x11, 0xEB, 0x31, 0x2C, 0x7B, 0xBB, 0x69, 0x97, 0xBD, 0x8D,
    0x27, 0x5F, 0xC2, 0x13, 0xAF, 0xE3, 0x11, 0xDB, 0x6A, 0x16, 0x40, 0xDC, 0x05, 0x7E, 0xDB, 0x04,
    0x95, 0x1E, 0x36, 0x6A, 0x35, 0xD3, 0x72, 0x3F, 0x87, 0x90, 0xB3, 0xBD, 0xA9, 0x35, 0x74, 0x60,
    0xF9, 0x8C, 0x61, 0xA1, 0x86, 0xAF, 0x39, 0xD4, 0x1C, 0x7B, 0x10, 0xD6, 0xD0, 0x64, 0x36, 0xAA,
    0x9B, 0xD5, 0x1D, 0xFC, 0x56, 0x85, 0x75, 0x91, 0xFA, 0x6B, 0x33, 0x94, 0x95, 0x11, 0x31, 0xC7,
    0xB8, 0xF4, 0x8F, 0x9A, 0xDA, 0x34, 0x1A, 0x56, 0x9E, 0x69, 0x2F, 0x96, 0x19, 0x78, 0xC1, 0x67,
    0x4E, 0xE2, 0x57, 0x02, 0x65, 0xB5, 0x4A, 0x72, 0xDF, 0x05, 0x8C, 0x0F, 0x42, 0x91, 0xF7, 0xE6,
    0xAA, 0xF7, 0xCE, 0x0A, 0x1C, 0x20, 0xDE, 0x9D, 0xE7, 0x8F, 0xF1, 0x35, 0x22, 0xC1, 0x74, 0xBA,
    0xD3, 0x08, 0x17, 0xAE, 0x99, 0x79, 0x39, 0x20, 0x26, 0x8F, 0xBF, 0x3E, 0x24, 0x7D, 0xCF, 0x95,
    0x21, 0xC5, 0x55, 0x85, 0x3A, 0xAF, 0x9A, 0xFC, 0x5D, 0x23, 0x78, 0x98, 0x05, 0x2E, 0xC1, 0xEF,
    0x2A, 0xA9, 0xAE, 0xB1, 0xAB, 0xB1, 0x59, 0xEF, 0x59, 0xF6, 0x2D, 0xCA, 0x5F, 0xBE, 0x2A, 0x44,
    0xD8, 0x89, 0x68, 0xFC, 0x08, 0xC2, 0x02, 0x80, 0x34, 0x64, 0x6C, 0x3F, 0x79, 0x9D, 0xCC, 0x06,
    0xF3, 0x3A, 0x84, 0x89, 0xE7, 0x75, 0xC9, 0xF2, 0x52, 0xDE, 0x1F, 0x4A, 0xBD, 0x27, 0x9A, 0xC2,
    0xB0, 0xD9, 0x65, 0x2C, 0x44, 0x4A, 0x5F, 0xCF, 0x12, 0x98, 0x85, 0x14, 0x66, 0x01, 0x30, 0x39,
    0x02, 0x93, 0x08, 0x4A, 0x82, 0x8B, 0x86, 0xFF, 0x82, 0x96, 0xFF, 0x03, 0x97, 0x3C, 0x50, 0xFA,
    0x15, 0x46, 0x00, 0x00};

#define SPIFFS_MAXLENGTH_FILEPATH 32

/* Exclusion list feature not needed and omitted */

// WEB HANDLER IMPLEMENTATION

#ifdef ESP32
SPIFFSEditor::SPIFFSEditor(const fs::FS& fs, const String& username, const String& password)
#else
SPIFFSEditor::SPIFFSEditor(const String& username, const String& password, const fs::FS& fs)
#endif
:_fs(fs)
,_username(username)
,_password(password)
,_authenticated(false)
,_startTime(0)
{}

bool SPIFFSEditor::canHandle(AsyncWebServerRequest *request){
  if(request->url().equalsIgnoreCase("/edit")){
    if(request->method() == HTTP_GET){
      if(request->hasParam("list"))
        return true;
      if(request->hasParam("edit")){
        if (request->arg("edit").indexOf("wsec") > -1) return false; //make sure wsec.json is not served
        request->_tempFile = _fs.open(request->arg("edit"), "r");
        if(!request->_tempFile){
          return false;
        }
#ifdef ESP32
        if(request->_tempFile.isDirectory()){
          request->_tempFile.close();
          return false;
        }
#endif
      }
      if(request->hasParam("download")){
        if (request->arg("download").indexOf("wsec") > -1) return false; //make sure wsec.json is not served
        request->_tempFile = _fs.open(request->arg("download"), "r");
        if(!request->_tempFile){
          return false;
        }
#ifdef ESP32
        if(request->_tempFile.isDirectory()){
          request->_tempFile.close();
          return false;
        }
#endif
      }
      request->addInterestingHeader("If-Modified-Since");
      return true;
    }
    else if(request->method() == HTTP_POST)
      return true;
    else if(request->method() == HTTP_DELETE)
      return true;
    else if(request->method() == HTTP_PUT)
      return true;

  }
  return false;
}


void SPIFFSEditor::handleRequest(AsyncWebServerRequest *request){
  if(_username.length() && _password.length() && !request->authenticate(_username.c_str(), _password.c_str()))
    return request->requestAuthentication();

  if(request->method() == HTTP_GET){
    if(request->hasParam("list")){
      String path = request->getParam("list")->value();
#ifdef ESP32
      File dir = _fs.open(path);
#else
      Dir dir = _fs.openDir(path);
#endif
      path = String();
      String output = "[";
#ifdef ESP32
      File entry = dir.openNextFile();
      while(entry){
#else
      while(dir.next()){
        fs::File entry = dir.openFile("r");
#endif
        String fname = entry.name();
        if (fname.indexOf("wsec") == -1) {
          if (output != "[") output += ',';
          output += "{\"type\":\"file\",\"name\":\"";
          if (fname[0] != '/') output += '/';
          output += fname;
          output += "\",\"size\":";
          output += String(entry.size());
          output += '}';
        }
#ifdef ESP32
        entry = dir.openNextFile();
#else
        entry.close();
#endif
      }
#ifdef ESP32
      dir.close();
#endif
      output += ']';
      request->send(200, "application/json", output);
      output = String();
    }
    else if(request->hasParam("edit") || request->hasParam("download")){
      request->send(request->_tempFile, request->_tempFile.name(), String(), request->hasParam("download"));
    }
    else {
      const char * buildTime = __DATE__ " " __TIME__ " GMT";
      if (request->header("If-Modified-Since").equals(buildTime)) {
        request->send(304);
      } else {
        AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", edit_htm_gz, edit_htm_gz_len);
        response->addHeader("Content-Encoding", "gzip");
        response->addHeader("Last-Modified", buildTime);
        request->send(response);
      }
    }
  } else if(request->method() == HTTP_DELETE){
    if(request->hasParam("path", true)){
        _fs.remove(request->getParam("path", true)->value());
      request->send(200, "", "DELETE: "+request->getParam("path", true)->value());
    } else
      request->send(404);
  } else if(request->method() == HTTP_POST){
    if(request->hasParam("data", true, true) && _fs.exists(request->getParam("data", true, true)->value()))
      request->send(200, "", "UPLOADED: "+request->getParam("data", true, true)->value());
    else
      request->send(500);
  } else if(request->method() == HTTP_PUT){
    if(request->hasParam("path", true)){
      String filename = request->getParam("path", true)->value();
      if(_fs.exists(filename)){
        request->send(200);
      } else {
        fs::File f = _fs.open(filename, "w");
        if(f){
          f.write((uint8_t)0x00);
          f.close();
          request->send(200, "", "CREATE: "+filename);
        } else {
          request->send(500);
        }
      }
    } else
      request->send(400);
  }
}

void SPIFFSEditor::handleUpload(AsyncWebServerRequest *request, const String& filename, size_t index, uint8_t *data, size_t len, bool final){
  if(!index){
    if(!_username.length() || request->authenticate(_username.c_str(),_password.c_str())){
      _authenticated = true;
      request->_tempFile = _fs.open(filename, "w");
      _startTime = millis();
    }
  }
  if(_authenticated && request->_tempFile){
    if(len){
      request->_tempFile.write(data,len);
    }
    if(final){
      request->_tempFile.close();
    }
  }
}
